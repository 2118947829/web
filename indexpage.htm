<!DOCTYPE html>
<html>
  <head>
    <meta
      http-equiv="Access-Control-Allow-Origin"
      content="*"
      charset="utf-8"
    />
    <!-- <meta http-equiv="refresh" content="5;url=file:///D:/%E6%A1%8C%E9%9D%A2/zhh/%E5%85%AC%E5%8F%B8code/js/Factory/start.htm"> -->
    <title>index</title>
    <script type="text/javascript" src="js/jquery.js"></script>
    <script type="text/javascript" src="js/echarts.min.js"></script>
    <link rel="stylesheet" href="css/css.css" />
  </head>

  <body>
    <div class="loading">
      <div class="loadbox"><img src="images/loading.gif" /> 页面加载中...</div>
    </div>
    <div class="canvas">
      <canvas width="100%" height="100%"></canvas>
    </div>
    <div class="head">
      <h1>
        <img src="images/Safety.png" alt="" style="width: 50px; height: 50px" />
        <a href="">小箱梁块体生产线数字孪生系统</a>
      </h1>
    </div>
    <div class="foot">
      <div class="button button1 btns_image" onclick="startpage()">首页</div>
      <div class="button btns_image" onclick="overview()">总览</div>
      <div class="button btns_image" onclick="details()">设备详情</div>
      <!-- <div class="button btns_image" onclick="overview1()">总部设备</div> -->
    </div>
    <!-- <div class="mainbox">
      <div class="toplight">
        <div
          class="topbox"
          style="padding: 0; display: flex; align-items: center"
        >
          <div class="percent percent2">
            <div class="percent-text">累计完成</div>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              style="
                margin: auto;
                background: rgb() none repeat scroll 0% 0%;
                display: block;
              "
              viewBox="0 0 100 100"
              preserveAspectRatio="xMidYMid"
            >
              <circle
                cx="50"
                cy="50"
                r="50"
                stroke="blue"
                stroke-width="0"
                fill="none"
              ></circle>
              <path
                d="M0 50 Q25 30 50 50 Q75 70 100 50 A50 50 0 0 1 0 50"
                fill="blue"
                opacity="0.5"
              >
                <animate
                  attributeName="d"
                  repeatCount="indefinite"
                  dur="2s"
                  calcMode="spline"
                  keyTimes="0;0.5;1"
                  values="M0 50 Q25 30 50 50 Q75 70 100 50 A50 50 0 0 1 0 50;M0 50 Q25 70 50 50 Q75 30 100 50 A50 50 0 0 1 0 50;M0 50 Q25 30 50 50 Q75 70 100 50 A50 50 0 0 1 0 50"
                  keySplines="0.5 0 0.5 1;0.5 0 0.5 1"
                ></animate>
              </path>
            </svg>
          </div>
          <div class="top_word">512片</div>
        </div>
        <div
          class="topbox"
          style="padding: 0; display: flex; align-items: center"
        >
          <div class="percent percent2">
            <div class="percent-text">累计消耗</div>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              style="
                margin: auto;
                background: rgb() none repeat scroll 0% 0%;
                display: block;
              "
              viewBox="0 0 100 100"
              preserveAspectRatio="xMidYMid"
            >
              <circle
                cx="50"
                cy="50"
                r="50"
                stroke="green"
                stroke-width="0"
                fill="none"
              ></circle>
              <path
                d="M0 50 Q25 30 50 50 Q75 70 100 50 A50 50 0 0 1 0 50"
                fill="green"
                opacity="0.5"
              >
                <animate
                  attributeName="d"
                  repeatCount="indefinite"
                  dur="2s"
                  calcMode="spline"
                  keyTimes="0;0.5;1"
                  values="M0 50 Q25 30 50 50 Q75 70 100 50 A50 50 0 0 1 0 50;M0 50 Q25 70 50 50 Q75 30 100 50 A50 50 0 0 1 0 50;M0 50 Q25 30 50 50 Q75 70 100 50 A50 50 0 0 1 0 50"
                  keySplines="0.5 0 0.5 1;0.5 0 0.5 1"
                ></animate>
              </path>
            </svg>
          </div>
          <div class="top_word">
            172片
            <span style="font-size: 20px">(4个块体)</span>
          </div>
        </div>
        <div
          class="topbox"
          style="padding: 0; display: flex; align-items: center"
        >
          <div class="percent percent2">
            <div class="percent-text">库存量</div>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              style="
                margin: auto;
                background: rgb() none repeat scroll 0% 0%;
                display: block;
              "
              viewBox="0 0 100 100"
              preserveAspectRatio="xMidYMid"
            >
              <circle
                cx="50"
                cy="50"
                r="50"
                stroke="Gold"
                stroke-width="0"
                fill="none"
              ></circle>
              <path
                d="M0 50 Q25 30 50 50 Q75 70 100 50 A50 50 0 0 1 0 50"
                fill="Gold"
                opacity="0.5"
              >
                <animate
                  attributeName="d"
                  repeatCount="indefinite"
                  dur="2s"
                  calcMode="spline"
                  keyTimes="0;0.5;1"
                  values="M0 50 Q25 30 50 50 Q75 70 100 50 A50 50 0 0 1 0 50;M0 50 Q25 70 50 50 Q75 30 100 50 A50 50 0 0 1 0 50;M0 50 Q25 30 50 50 Q75 70 100 50 A50 50 0 0 1 0 50"
                  keySplines="0.5 0 0.5 1;0.5 0 0.5 1"
                ></animate>
              </path>
            </svg>
          </div>
          <div class="top_word">342片</div>
        </div>
      </div>
      <div class="centerlight">
        <div class="center_left">
          <div class="tit01">
            <div>
              <img
                src="./images/moxing.svg"
                alt=""
                style="width: 25px; height: 25px"
              />
            </div>
            <div style="padding: 0rem 0.1rem">加工数量（按片体记）</div>
          </div>
          <div class="boxnav nav03" id="echart1"></div>
        </div>
        <div class="center_left">
          <div class="tit01">
            <div>
              <img
                src="./images/grid.svg"
                alt=""
                style="width: 25px; height: 25px"
              />
            </div>
            <div style="padding: 0rem 0.1rem">消耗数量（按块体记）</div>
          </div>
          <div class="boxnav nav03" id="echart2"></div>
        </div>
      </div>
      <div class="centerlight">
        <div class="center_left">
          <div class="tit01">
            <div>
              <img
                src="./images/file.svg"
                alt=""
                style="width: 25px; height: 25px"
              />
            </div>
            <div style="padding: 0rem 0.1rem">生产详情</div>
          </div>
          <div class="bottom">
            <div class="bottom_left">
              <div class="BLeft">13#节段</div>
              <div class="BRight">
                <div class="RTop">生产中</div>
                <div class="RBottom">当前状态</div>
              </div>
            </div>
            <div class="gradient-line">
            </div>
            <div class="bottom_center">
              <div class="CLeft" id="echart3"></div>
              <div class="CRight">
                <div class="CRight_top">
                  <div class="CRT">
                    <div class="CRtop"></div>
                    <div>完工数量</div>
                  </div>
                  <div class="CRNum">15</div>
                </div>
                <div class="CRight_top">
                  <div class="CRT">
                    <div class="CRtop1"></div>
                    <div>计划数量</div>
                  </div>
                  <div class="CRNum1">45</div>
                </div>
              </div>
            </div>
            <div class="bottom_right">
              <div class="BRTOP">
                <div class="BRTOP_left">生产中：第16层片体
                   <span style="font-size: 12px; color: #ccc;margin-left: 15%;">当前进度</span>
                </div>
                <div class="progress-container">
                  <div class="progress-bar" style="width: 75%;"></div>
                </div>
                <div class="progress-num">75%</div>
              </div>
              <div class="BRTOP">
                <div class="BRTOP_left">生产中：第17层片体
                   <span style="font-size: 12px; color: #ccc;margin-left: 15%;">当前进度</span>
                </div>
                <div class="progress-container">
                  <div class="progress-bar" style="width: 55%;"></div>
                </div>
                <div class="progress-num">55%</div>
              </div>
              <div class="BRTOP">
                <div class="BRTOP_left">生产中：第18层片体
                   <span style="font-size: 12px; color: #ccc;margin-left: 15%;">当前进度</span>
                </div>
                <div class="progress-container">
                  <div class="progress-bar" style="width: 100%;"></div>
                </div>
                <div class="progress-num">100%</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div> -->
    <iframe id="myframe" src="" frameborder="0"></iframe>

    <script language="JavaScript" src="js/js.js"></script>
    <script type="text/javascript" src="js/jquery.countup.min.js"></script>
    <script type="text/javascript" src="js/jquery.waypoints.min.js"></script>
    <script src="js/jquery.liMarquee.js"></script>
    <script type="text/javascript">
      $(".counter").countUp();
      $(function () {
        $(".scrollDiv").liMarquee({
          direction: "up", //身上滚动
          runshort: true, //内容不足时不滚动
          scrollamount: 15, //速度
        });
        $(".scrollDiv1").liMarquee({
          direction: "up", //身上滚动
          runshort: true, //内容不足时不滚动
          scrollamount: 15, //速度
        });
        var temp = "";
        //var temp="<li><span>23</span><span>44</span><span>22</span></li><li><span>23</span><span>44</span><span>22</span></li>";
        //$('#taskinfo').html(temp);
        // GetTaskInfo();
        setInterval(GetTaskInfo, 1000 * 60 * 10);
        function GetTaskInfo() {
          temp = "";
          $.post(
            "http://39.108.69.97:17739/GfyService.asmx/GetTaskInfo",
            {},
            function (data) {
              for (var i = 0; i < 20; i++) {
                var obj = eval(data);
                var temptime = "";
                var tempdate = ""; //2023/10/30 15:12:49
                var temp01 = "";
                if (obj[i].CallTime.length > 0) {
                  var arr = obj[i].CallTime.split(" ");
                  tempdate = arr[0].substring(5); //10/30
                  temptime = arr[1]; //15:12:49
                  if (temptime.length != 8) {
                    temptime = "0" + temptime;
                  }
                }
                //if(tempdate.indexOf("/")!=-1)
                //{
                //    tempdate=tempdate.replace('/','0')
                //}
                temp +=
                  "<li><span>" +
                  tempdate +
                  "</span><span>" +
                  temptime +
                  "</span><span>";
                var sT = "";
                switch (obj[i].Area) {
                  case "DT08":
                    sT = "21梯";
                    break;
                  case "DT18":
                    sT += "11梯";
                    break;
                  case "DT06":
                    sT += "14梯";
                    break;
                  default:
                    sT = "21梯";
                    break;
                }
                temp += obj[i].Floor + "楼" + sT + "</span><span>";
                if (obj[i].ExeAgv != null) {
                  if (obj[i].ExeAgv != "") {
                    temp += obj[i].ExeAgv;
                  } else {
                    temp += "AGV02";
                  }
                }
                temp += "</span><span>";
                switch (obj[i].Status) {
                  case "0":
                    temp += "等待执行";
                    break;
                  case "1":
                    temp += "正在执行";
                    break;
                  case "2":
                    temp += "完成";
                    break;
                  default:
                    temp += "等待执行";
                    break;
                }
                temp += "</span><span>";
                switch (obj[i].RubbishType) {
                  case "1":
                    temp += "感染类";
                    break;
                  case "2":
                    temp += "病理类";
                    break;
                  case "3":
                    temp += "损伤类";
                    break;
                  default:
                    temp += "感染类";
                    break;
                }
                temp += "</span></li>";
              }
              $("#taskinfo").html(temp);
              //$('#taskinfo').innerHTML(temp);
            }
          );
        }
      });
    </script>
    <script>
      $(function () {
        var canvas = document.querySelector("canvas"),
          ctx = canvas.getContext("2d");
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        ctx.lineWidth = 0.3;
        ctx.strokeStyle = new Color(150).style;
        var mousePosition = {
          x: (30 * canvas.width) / 100,
          y: (30 * canvas.height) / 100,
        };
        var dots = {
          nb: 250,
          distance: 50,
          d_radius: 400,
          array: [],
        };
        function colorValue(min) {
          return Math.floor(Math.random() * 255 + min);
        }
        function createColorStyle(r, g, b) {
          return "rgba(" + r + "," + g + "," + b + ", 0.8)";
        }
        function mixComponents(comp1, weight1, comp2, weight2) {
          return (comp1 * weight1 + comp2 * weight2) / (weight1 + weight2);
        }
        function averageColorStyles(dot1, dot2) {
          var color1 = dot1.color,
            color2 = dot2.color;
          var r = mixComponents(color1.r, dot1.radius, color2.r, dot2.radius),
            g = mixComponents(color1.g, dot1.radius, color2.g, dot2.radius),
            b = mixComponents(color1.b, dot1.radius, color2.b, dot2.radius);
          return createColorStyle(Math.floor(r), Math.floor(g), Math.floor(b));
        }
        function Color(min) {
          min = min || 0;
          this.r = colorValue(min);
          this.g = colorValue(min);
          this.b = colorValue(min);
          this.style = createColorStyle(this.r, this.g, this.b);
        }
        function Dot() {
          this.x = Math.random() * canvas.width;
          this.y = Math.random() * canvas.height;
          this.vx = -0.5 + Math.random();
          this.vy = -0.5 + Math.random();
          this.radius = Math.random() * 2;
          this.color = new Color();
          //console.log(this)
        }
        Dot.prototype = {
          draw: function () {
            ctx.beginPath();
            ctx.fillStyle = this.color.style;
            ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
            ctx.fill();
          },
        };
        function createDots() {
          for (i = 0; i < dots.nb; i++) {
            dots.array.push(new Dot());
          }
        }
        function moveDots() {
          for (i = 0; i < dots.nb; i++) {
            var dot = dots.array[i];
            if (dot.y < 0 || dot.y > canvas.height) {
              dot.vx = dot.vx;
              dot.vy = -dot.vy;
            } else if (dot.x < 0 || dot.x > canvas.width) {
              dot.vx = -dot.vx;
              dot.vy = dot.vy;
            }
            dot.x += dot.vx;
            dot.y += dot.vy;
          }
        }
        function connectDots() {
          for (i = 0; i < dots.nb; i++) {
            for (j = 0; j < dots.nb; j++) {
              i_dot = dots.array[i];
              j_dot = dots.array[j];
              if (
                i_dot.x - j_dot.x < dots.distance &&
                i_dot.y - j_dot.y < dots.distance &&
                i_dot.x - j_dot.x > -dots.distance &&
                i_dot.y - j_dot.y > -dots.distance
              ) {
                if (
                  i_dot.x - mousePosition.x < dots.d_radius &&
                  i_dot.y - mousePosition.y < dots.d_radius &&
                  i_dot.x - mousePosition.x > -dots.d_radius &&
                  i_dot.y - mousePosition.y > -dots.d_radius
                ) {
                  ctx.beginPath();
                  ctx.strokeStyle = averageColorStyles(i_dot, j_dot);
                  ctx.moveTo(i_dot.x, i_dot.y);
                  ctx.lineTo(j_dot.x, j_dot.y);
                  ctx.stroke();
                  ctx.closePath();
                }
              }
            }
          }
        }
        function drawDots() {
          for (i = 0; i < dots.nb; i++) {
            var dot = dots.array[i];
            dot.draw();
          }
        }
        function animateDots() {
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          moveDots();
          connectDots();
          drawDots();
          requestAnimationFrame(animateDots);
        }
        $("canvas").on("mousemove", function (e) {
          mousePosition.x = e.pageX;
          mousePosition.y = e.pageY;
        });
        $("canvas").on("mouseleave", function (e) {
          mousePosition.x = canvas.width / 2;
          mousePosition.y = canvas.height / 2;
        });
        createDots();
        requestAnimationFrame(animateDots);
      });
    </script>
    <script>
      var iframe = document.getElementById("myframe");
      var webpageArray = [
        "./start.htm",
        "./overview.htm",
        "./details.htm",
        "./VideoPage.html",
      ];
      function startpage() {
        if (event && event.currentTarget.classList) {
          $(".btns_image").removeClass("button1");
          event.currentTarget.classList.add("button1");
        }
        let src = webpageArray[0];
        iframe.src = src;
        // setInterval(function () {
        //   overview();
        // }, 5000);
        return;
      }
      function overview() {
        if (event && event.currentTarget.classList) {
          $(".btns_image").removeClass("button1");
          event.currentTarget.classList.add("button1");
        }
        let src = webpageArray[1];
        iframe.src = src;
        // setInterval(function () {
        //   details();
        // }, 5000);
        return;
      }
      function details() {
        if (event && event.currentTarget.classList) {
          $(".btns_image").removeClass("button1");
          event.currentTarget.classList.add("button1");
        }
        let src = webpageArray[2];
        iframe.src = src;
        // setInterval(function () {
        //   startpage();
        // }, 5000);
        return;
      }
      function overview1() {
        if (event && event.currentTarget.classList) {
          $(".btns_image").removeClass("button1");
          event.currentTarget.classList.add("button1");
        }
      }
      startpage();
    </script>
  </body>
</html>
